{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adity\\\\backend\\\\EcommerceWebsite\\\\Frontendd\\\\src\\\\core\\\\StripeCheckout.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { isAuthenticated } from '../auth/helper';\nimport { cartEmpty, loadCart } from './helper/cartHelper';\n\nconst StripeCheckout = ({\n  products,\n  setReload = f => f,\n  reload = undefined\n}) => {\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    error: \"\",\n    address: \"\"\n  });\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const getFinalAmount = () => {\n    let amount = 0;\n    products.map(p => {\n      amount = amount + p.price;\n    });\n    return amount;\n  };\n\n  const showStripeButton = () => {\n    return isAuthenticated() ? React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Pay with Stripe\") : React.createElement(Link, {\n      to: \"signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Signin\"));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"text-white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"StripCheckout \", getFinalAmount()), showStripeButton());\n};\n\nexport default StripeCheckout;","map":{"version":3,"sources":["C:/Users/adity/backend/EcommerceWebsite/Frontendd/src/core/StripeCheckout.js"],"names":["React","useState","useEffect","Link","isAuthenticated","cartEmpty","loadCart","StripeCheckout","products","setReload","f","reload","undefined","data","setData","loading","success","error","address","token","userId","user","_id","getFinalAmount","amount","map","p","price","showStripeButton"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,eAAR,QAA8B,gBAA9B;AACA,SAAQC,SAAR,EAAkBC,QAAlB,QAAkC,qBAAlC;;AAIA,MAAMC,cAAc,GAAG,CACnB;AAACC,EAAAA,QAAD;AACAC,EAAAA,SAAS,GAAGC,CAAC,IAAIA,CADjB;AAEAC,EAAAA,MAAM,GAAGC;AAFT,CADmB,KAKlB;AAEA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBb,QAAQ,CAAC;AAC5Bc,IAAAA,OAAO,EAAC,KADoB;AAE5BC,IAAAA,OAAO,EAAC,KAFoB;AAG5BC,IAAAA,KAAK,EAAC,EAHsB;AAI5BC,IAAAA,OAAO,EAAC;AAJoB,GAAD,CAA/B;AAQA,QAAMC,KAAK,GAAGf,eAAe,MAAMA,eAAe,GAAGe,KAArD;;AACA,QAAMC,MAAM,GAAGhB,eAAe,MAAMA,eAAe,GAAGiB,IAAlB,CAAuBC,GAA3D;;AAEA,QAAMC,cAAc,GAAG,MAAK;AACxB,QAAIC,MAAM,GAAG,CAAb;AACAhB,IAAAA,QAAQ,CAACiB,GAAT,CAAaC,CAAC,IAAI;AACdF,MAAAA,MAAM,GAAGA,MAAM,GAAGE,CAAC,CAACC,KAApB;AACH,KAFD;AAGA,WAAOH,MAAP;AACH,GAND;;AAQA,QAAMI,gBAAgB,GAAG,MAAK;AAC3B,WAAOxB,eAAe,KAClB;AAAQ,MAAA,SAAS,EAAE,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADkB,GAGlB,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAHJ;AAOF,GARD;;AAUD,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA0CmB,cAAc,EAAxD,CADJ,EAEKK,gBAAgB,EAFrB,CADJ;AAMH,CA1CD;;AA4CA,eAAerB,cAAf","sourcesContent":["import React ,{useState,useEffect }from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {isAuthenticated} from '../auth/helper';\r\nimport {cartEmpty,loadCart } from './helper/cartHelper';\r\n\r\n\r\n\r\nconst StripeCheckout = (\r\n    {products,\r\n    setReload = f => f,\r\n    reload = undefined\r\n    }\r\n) => {\r\n  \r\n     const [data,setData] = useState({\r\n         loading:false,\r\n         success:false,\r\n         error:\"\",\r\n         address:\"\"\r\n\r\n     });\r\n\r\n     const token = isAuthenticated() && isAuthenticated().token \r\n     const userId = isAuthenticated() && isAuthenticated().user._id\r\n\r\n     const getFinalAmount = () =>{\r\n         let amount = 0\r\n         products.map(p => {\r\n             amount = amount + p.price\r\n         })\r\n         return amount\r\n     }\r\n\r\n     const showStripeButton = () =>{\r\n        return isAuthenticated() ? (\r\n            <button className= \"btn btn-success\">Pay with Stripe</button>\r\n        ) : (\r\n            <Link to=\"signin\">\r\n                <button className=\"btn btn-warning\">Signin</button>\r\n            </Link>\r\n        )   \r\n     }\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"text-white\">StripCheckout {getFinalAmount()}</h3>\r\n            {showStripeButton()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StripeCheckout;\r\n"]},"metadata":{},"sourceType":"module"}