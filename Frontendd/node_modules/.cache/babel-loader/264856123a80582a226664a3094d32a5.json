{"ast":null,"code":"import { API } from \"../../backend\"; // create  category\n\nexport const createCategory = (userId, token, Category) => {\n  return fetch(`${API}/category/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(Category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n}; //get All categories\n\nexport const getCategories = (userId, token, categories) => {\n  return fetch(`${API}/categories`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const updateCategory = (categoryId, userId, token, category) => {\n  return fetch(`${API}/category/${categoryId}/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const deleteCategory = (categoryId, userId, token) => {\n  return fetch(`${API}/category/${categoryId}/${userId}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const getCategory = categoryId => {\n  return fetch(`${API}/category/${categoryId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n}; // create product\n\nexport const createaProduct = (userId, token, product) => {\n  return fetch(`${API}/product/create/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n}; // get all products\n\nexport const getProducts = (userId, token, products) => {\n  return fetch(`${API}/products`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n}; //delete a product\n\nexport const deleteProduct = (productId, userId, token) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n}; //get a product\n\nexport const getProduct = productId => {\n  return fetch(`${API}/product/${productId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n}; //uodate a product\n\nexport const updateProduct = (productId, userId, token, product) => {\n  return fetch(`${API}/product/${productId}/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["C:/Users/adity/backend/EcommerceWebsite/Frontendd/src/admin/helper/adminapicall.js"],"names":["API","createCategory","userId","token","Category","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","getCategories","categories","updateCategory","categoryId","category","deleteCategory","getCategory","createaProduct","product","getProducts","products","deleteProduct","productId","getProduct","updateProduct"],"mappings":"AAAA,SAAQA,GAAR,QAAkB,eAAlB,C,CAGA;;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,MAAD,EAAUC,KAAV,EAAiBC,QAAjB,KAA6B;AACvD,SAAOC,KAAK,CAAE,GAAEL,GAAI,oBAAmBE,MAAO,EAAlC,EAAoC;AAC5CI,IAAAA,MAAM,EAAC,MADqC;AAE5CC,IAAAA,OAAO,EAAC;AACJC,MAAAA,MAAM,EAAC,kBADH;AAEJ,sBAAgB,kBAFZ;AAGJC,MAAAA,aAAa,EAAG,UAASN,KAAM;AAH3B,KAFoC;AAO5CO,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AAPsC,GAApC,CAAL,CASJS,IATI,CASCC,QAAQ,IAAG;AACb,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAXI,EAYJC,KAZI,CAYGC,GAAG,IAAG;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACP,GAdI,CAAP;AAgBH,CAjBM,C,CAkBP;;AAEA,OAAO,MAAMG,aAAa,GAAG,CAAClB,MAAD,EAAUC,KAAV,EAAiBkB,UAAjB,KAA+B;AACxD,SAAOhB,KAAK,CAAE,GAAEL,GAAI,aAAR,EAAqB;AAC7BM,IAAAA,MAAM,EAAC;AADsB,GAArB,CAAL,CAIJO,IAJI,CAICC,QAAQ,IAAG;AACb,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GANI,EAOJC,KAPI,CAOGC,GAAG,IAAG;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACP,GATI,CAAP;AAUH,CAXM;AAaP,OAAO,MAAMK,cAAc,GAAG,CAACC,UAAD,EAAYrB,MAAZ,EAAqBC,KAArB,EAA4BqB,QAA5B,KAAwC;AAClE,SAAOnB,KAAK,CAAE,GAAEL,GAAI,aAAYuB,UAAW,IAAGrB,MAAO,EAAzC,EAA2C;AACnDI,IAAAA,MAAM,EAAC,KAD4C;AAEnDC,IAAAA,OAAO,EAAC;AACJC,MAAAA,MAAM,EAAC,kBADH;AAEJ,sBAAgB,kBAFZ;AAGJC,MAAAA,aAAa,EAAG,UAASN,KAAM;AAH3B,KAF2C;AASnDO,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeY,QAAf;AAT6C,GAA3C,CAAL,CAWJX,IAXI,CAWCC,QAAQ,IAAG;AACb,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAbI,EAcJC,KAdI,CAcGC,GAAG,IAAG;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACP,GAhBI,CAAP;AAiBH,CAlBM;AAqBP,OAAO,MAAMQ,cAAc,GAAG,CAACF,UAAD,EAAYrB,MAAZ,EAAqBC,KAArB,KAA8B;AACxD,SAAOE,KAAK,CAAE,GAAEL,GAAI,aAAYuB,UAAW,IAAGrB,MAAO,EAAzC,EAA2C;AACnDI,IAAAA,MAAM,EAAC,QAD4C;AAEnDC,IAAAA,OAAO,EAAC;AACJC,MAAAA,MAAM,EAAC,kBADH;AAEJC,MAAAA,aAAa,EAAG,UAASN,KAAM;AAF3B;AAF2C,GAA3C,CAAL,CAQJU,IARI,CAQCC,QAAQ,IAAG;AACb,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVI,EAWJC,KAXI,CAWGC,GAAG,IAAG;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACP,GAbI,CAAP;AAcH,CAfM;AAiBP,OAAO,MAAMS,WAAW,GAAIH,UAAD,IAAe;AACtC,SAAOlB,KAAK,CAAE,GAAEL,GAAI,aAAYuB,UAAW,EAA/B,EAAiC;AACzCjB,IAAAA,MAAM,EAAC;AADkC,GAAjC,CAAL,CAIJO,IAJI,CAICC,QAAQ,IAAG;AACb,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GANI,EAOJC,KAPI,CAOGC,GAAG,IAAG;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACP,GATI,CAAP;AAUH,CAXM,C,CAcP;;AACA,OAAO,MAAMU,cAAc,GAAG,CAACzB,MAAD,EAAUC,KAAV,EAAiByB,OAAjB,KAA4B;AACtD,SAAOvB,KAAK,CAAE,GAAEL,GAAI,mBAAkBE,MAAO,EAAjC,EAAmC;AAC3CI,IAAAA,MAAM,EAAC,MADoC;AAE3CC,IAAAA,OAAO,EAAC;AACJC,MAAAA,MAAM,EAAC,kBADH;AAEJC,MAAAA,aAAa,EAAG,UAASN,KAAM;AAF3B,KAFmC;AAM3CO,IAAAA,IAAI,EAAEkB;AANqC,GAAnC,CAAL,CAQJf,IARI,CAQCC,QAAQ,IAAG;AACb,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVI,EAWJC,KAXI,CAWGC,GAAG,IAAG;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACP,GAbI,CAAP;AAcH,CAfM,C,CAiBP;;AAEA,OAAO,MAAMY,WAAW,GAAG,CAAC3B,MAAD,EAAUC,KAAV,EAAiB2B,QAAjB,KAA6B;AACpD,SAAOzB,KAAK,CAAE,GAAEL,GAAI,WAAR,EAAmB;AAC3BM,IAAAA,MAAM,EAAC;AADoB,GAAnB,CAAL,CAIJO,IAJI,CAICC,QAAQ,IAAG;AACb,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GANI,EAOJC,KAPI,CAOGC,GAAG,IAAG;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACP,GATI,CAAP;AAUH,CAXM,C,CAaP;;AACA,OAAO,MAAMc,aAAa,GAAG,CAACC,SAAD,EAAW9B,MAAX,EAAoBC,KAApB,KAA6B;AACtD,SAAOE,KAAK,CAAE,GAAEL,GAAI,YAAWgC,SAAU,IAAG9B,MAAO,EAAvC,EAAyC;AACjDI,IAAAA,MAAM,EAAC,QAD0C;AAEjDC,IAAAA,OAAO,EAAC;AACJC,MAAAA,MAAM,EAAC,kBADH;AAEJC,MAAAA,aAAa,EAAG,UAASN,KAAM;AAF3B;AAFyC,GAAzC,CAAL,CAQJU,IARI,CAQCC,QAAQ,IAAG;AACb,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVI,EAWJC,KAXI,CAWGC,GAAG,IAAG;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACP,GAbI,CAAP;AAcH,CAfM,C,CAkBP;;AAIA,OAAO,MAAMgB,UAAU,GAAGD,SAAS,IAAI;AACnC,SAAO3B,KAAK,CAAE,GAAEL,GAAI,YAAWgC,SAAU,EAA7B,EAAgC;AAC1C1B,IAAAA,MAAM,EAAE;AADkC,GAAhC,CAAL,CAGJO,IAHI,CAGCC,QAAQ,IAAI;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GALI,EAMJC,KANI,CAMEC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANT,CAAP;AAOD,CARI,C,CAWP;;AAEA,OAAO,MAAMiB,aAAa,GAAG,CAACF,SAAD,EAAW9B,MAAX,EAAoBC,KAApB,EAA2ByB,OAA3B,KAAsC;AAC/D,SAAOvB,KAAK,CAAE,GAAEL,GAAI,YAAWgC,SAAU,IAAG9B,MAAO,EAAvC,EAAyC;AACjDI,IAAAA,MAAM,EAAC,KAD0C;AAEjDC,IAAAA,OAAO,EAAC;AACJC,MAAAA,MAAM,EAAC,kBADH;AAEJC,MAAAA,aAAa,EAAG,UAASN,KAAM;AAF3B,KAFyC;AAMjDO,IAAAA,IAAI,EAAEkB;AAN2C,GAAzC,CAAL,CAQJf,IARI,CAQCC,QAAQ,IAAG;AACb,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVI,EAWJC,KAXI,CAWGC,GAAG,IAAG;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACP,GAbI,CAAP;AAcH,CAfM","sourcesContent":["import {API} from \"../../backend\"\r\n\r\n\r\n// create  category\r\nexport const createCategory = (userId , token, Category) =>{\r\n    return fetch(`${API}/category/create/${userId}`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:\"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(Category)\r\n    })\r\n      .then(response =>{\r\n          return response.json();\r\n      })\r\n      .catch( err =>{\r\n              console.log(err);\r\n      })\r\n\r\n}\r\n//get All categories\r\n\r\nexport const getCategories = (userId , token, categories) =>{\r\n    return fetch(`${API}/categories`,{\r\n        method:\"GET\"\r\n        \r\n    })\r\n      .then(response =>{\r\n          return response.json();\r\n      })\r\n      .catch( err =>{\r\n              console.log(err);\r\n      })\r\n}\r\n\r\nexport const updateCategory = (categoryId,userId , token, category) =>{\r\n    return fetch(`${API}/category/${categoryId}/${userId}`,{\r\n        method:\"PUT\",\r\n        headers:{\r\n            Accept:\"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,           \r\n   \r\n\r\n        },\r\n        body: JSON.stringify(category)\r\n    })\r\n      .then(response =>{\r\n          return response.json();\r\n      })\r\n      .catch( err =>{\r\n              console.log(err);\r\n      })\r\n}\r\n\r\n\r\nexport const deleteCategory = (categoryId,userId , token) =>{\r\n    return fetch(`${API}/category/${categoryId}/${userId}`,{\r\n        method:\"DELETE\",\r\n        headers:{\r\n            Accept:\"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        \r\n    })\r\n      .then(response =>{\r\n          return response.json();\r\n      })\r\n      .catch( err =>{\r\n              console.log(err);\r\n      })\r\n}\r\n\r\nexport const getCategory = (categoryId) =>{\r\n    return fetch(`${API}/category/${categoryId}`,{\r\n        method:\"GET\"\r\n        \r\n    })\r\n      .then(response =>{\r\n          return response.json();\r\n      })\r\n      .catch( err =>{\r\n              console.log(err);\r\n      })\r\n}\r\n\r\n\r\n// create product\r\nexport const createaProduct = (userId , token, product) =>{\r\n    return fetch(`${API}/product/create/${userId}`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:\"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n      .then(response =>{\r\n          return response.json();\r\n      })\r\n      .catch( err =>{\r\n              console.log(err);\r\n      })\r\n}\r\n\r\n// get all products\r\n\r\nexport const getProducts = (userId , token, products) =>{\r\n    return fetch(`${API}/products`,{\r\n        method:\"GET\"\r\n        \r\n    })\r\n      .then(response =>{\r\n          return response.json();\r\n      })\r\n      .catch( err =>{\r\n              console.log(err);\r\n      })\r\n}\r\n\r\n//delete a product\r\nexport const deleteProduct = (productId,userId , token) =>{\r\n    return fetch(`${API}/product/${productId}/${userId}`,{\r\n        method:\"DELETE\",\r\n        headers:{\r\n            Accept:\"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        \r\n    })\r\n      .then(response =>{\r\n          return response.json();\r\n      })\r\n      .catch( err =>{\r\n              console.log(err);\r\n      })\r\n}\r\n\r\n\r\n//get a product\r\n\r\n\r\n\r\nexport const getProduct = productId => {\r\n    return fetch(`${API}/product/${productId}`, {\r\n      method: \"GET\"\r\n    })\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n\r\n//uodate a product\r\n\r\nexport const updateProduct = (productId,userId , token, product) =>{\r\n    return fetch(`${API}/product/${productId}/${userId}`,{\r\n        method:\"PUT\",\r\n        headers:{\r\n            Accept:\"application/json\",\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: product\r\n    })\r\n      .then(response =>{\r\n          return response.json();\r\n      })\r\n      .catch( err =>{\r\n              console.log(err);\r\n      })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}